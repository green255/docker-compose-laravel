
networks:
  app-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

services:
  nginx:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      target: ${ENVIRONMENT}
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    expose:
      - "80"
      - "443"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./public:/var/www/src/public
      - ./dockerfiles/certbot/config/ca_signed:/etc/letsencrypt
      - ./dockerfiles/certbot/config/self_signed:/etc/nginx/certs
      - ./dockerfiles/certbot/challenge:/var/www/src/certbot/challenge
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      app-net:
        ipv4_address: 172.20.0.2

  mysql:
    image: mysql:8.0.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${SERVICE_TAGS}
      SERVICE_NAME: mysql
    volumes:
      - ./dockerfiles/mysql:/var/lib/mysql
      - ./dockerfiles/mysql/init:/docker-entrypoint-initdb.d
    networks:
      app-net:
        ipv4_address: 172.20.0.4

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      target: ${ENVIRONMENT}
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG?}
      - XDEBUG_TRIGGER=${XDEBUG_TRIGGER?}
    volumes:
      - ./:/var/www/src
    networks:
      app-net:
        ipv4_address: 172.20.0.3

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      app-net:
        ipv4_address: 172.20.0.6

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./:/var/www/src
    working_dir: /var/www/src
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer']
    networks:
      app-net:
        ipv4_address: 172.20.0.8

  npm:
    image: node:lts-alpine
    container_name: npm
    volumes:
      - ./:/var/www/src
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www/src
    entrypoint: ['npm']
    networks:
      app-net:
        ipv4_address: 172.20.0.9

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      target: ${ENVIRONMENT}
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG?}
      - XDEBUG_TRIGGER=${XDEBUG_TRIGGER?}
    volumes:
      - ./:/var/www/src
    depends_on:
      - mysql
    working_dir: /var/www/src
    entrypoint: ['php', '/var/www/src/artisan']
    networks:
      app-net:
        ipv4_address: 172.20.0.7

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      app-net:
        ipv4_address: 172.20.0.5

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./dockerfiles/certbot/config/ca_signed:/etc/letsencrypt
      - ./dockerfiles/certbot/challenge:/var/www/src/certbot/challenge
    networks:
      app-net:
        ipv4_address: 172.20.0.10
