version: '3.4'

networks:
  app-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

services:
  nginx:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      app-net:
        ipv4_address: 172.20.0.2

  mysql:
    image: mysql:8.0.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${SERVICE_TAGS}
      SERVICE_NAME: mysql
    networks:
      app-net:
        ipv4_address: 172.20.0.4

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      target: ${ENVIRONMENT}
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG?}
    volumes:
      - ./:/var/www/html:delegated
    networks:
      app-net:
        ipv4_address: 172.20.0.3

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      app-net:
        ipv4_address: 172.20.0.6

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      app-net:
        ipv4_address: 172.20.0.8

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      app-net:
        ipv4_address: 172.20.0.9

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      target: ${ENVIRONMENT}
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG?}
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      app-net:
        ipv4_address: 172.20.0.7

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      app-net:
        ipv4_address: 172.20.0.5
